## sensitive environment variables
sensitiveEnvs: {}

# specifies that application is accessible outside the cluster
service:
  type: 'NodePort'
  port: 80

## specifies the port to access the application within the container.
containerPort: 8080

## Ingress annotations
##
ingress:
  enabled: false
  basicAuth:
    enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  path: '/*'
  hosts:
    - 'service-name.local'
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

## specifies the configuration for liveness and readiness probes for the service
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes)
livenessProbe:
  httpGet:
    path: '/health'
    port: 'container-port'
  initialDelaySeconds: 15
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 5
readinessProbe:
  httpGet:
    path: '/health'
    port: 'container-port'
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 5

 # enable/disable nginx as a sidecar
nginx:
  enabled: false
  name: nginx
  port: 8080


## enable/disable affinity rules for k8 component scheduling
affinity:
  enabled: false

## Pod Disruption Budget definition
## ref: https://kubernetes.io/docs/concepts/workloads/pods/disruptions/
pdb:
  enabled: false
  spec:
    maxUnavailable: "10%"

# Google managed certificates for publicly exposed services
managecertificate:
  enabled: false