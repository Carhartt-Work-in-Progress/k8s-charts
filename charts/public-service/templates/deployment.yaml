apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "public-service.fullname" . }}
  labels:
    app: {{ template "public-service.name" . }}
    chart: {{ template "public-service.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "public-service.name" . }}
      release: {{ .Release.Name }}
  strategy:
{{ toYaml .Values.updateStrategy | indent 6 }}
  minReadySeconds: {{ .Values.minReadySeconds }}
  template:
    metadata:
      labels:
        app: {{ template "public-service.name" . }}
        release: {{ .Release.Name }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
        {{- if .Values.nginx.enabled }}
        checksum/nginx-config: {{ include (print $.Template.BasePath "/nginx-config-map.yaml") . | sha256sum }}
        {{- end }}
    spec:
      {{- if .Values.affinity.enabled }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - {{ template "public-service.name" . }}
                topologyKey: "kubernetes.io/hostname"
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: container-port
              containerPort: {{ .Values.containerPort }}
          # Inject (non sensitive) environment variables from the `Values` config.
          env:
        {{- range $key, $val := .Values.nonSensitiveEnvs }}
            - name: {{ $key }}
              value: {{ $val | quote }}
        {{- end}}
            # Inject (sensitive) environment variables from `Values` config, referring
            # them from the related Secret object. This is an extra measure of security
            # to avoid having credentials displayed in plain text in the template file.
            # https://kubernetes.io/docs/concepts/configuration/secret/
        {{- $chartName := include "public-service.fullname" . -}}
        {{- range $key, $val := .Values.sensitiveEnvs }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ $chartName }}-secret
                  key: {{ $key }}
        {{- end}}
          livenessProbe:
{{ toYaml .Values.livenessProbe | indent 10 }}
          readinessProbe:
{{ toYaml .Values.readinessProbe | indent 10 }}
          resources:
{{ toYaml .Values.resources | indent 10 }}
      {{- if .Values.nginx.enabled }}
        - name: nginx
          image: nginx:latest
          ports:
          - name: nginx-port
            containerPort: {{ .Values.nginx.port }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: nginx-port
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /healthz
              port: nginx-port
            periodSeconds: 15
            timeoutSeconds: 10
            failureThreshold: 3
          volumeMounts:
            - name: {{ .Values.nginx.name }}-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - name: {{ .Values.nginx.name }}-htpasswd-secret
              mountPath: "/etc/nginx/auth"
      volumes:
        - name: {{ .Values.nginx.name }}-config
          configMap:
            name: {{ .Values.nginx.name }}-config
        - name: {{ .Values.nginx.name }}-htpasswd-secret
          secret:
            secretName: {{ .Values.nginx.name }}-htpasswd-secret
        {{- end }}